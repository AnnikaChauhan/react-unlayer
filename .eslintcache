[{"/Users/annikachauhan/code/annika-personal/react/unlayer/src/reportWebVitals.js":"1","/Users/annikachauhan/code/annika-personal/react/unlayer/src/App.js":"2","/Users/annikachauhan/code/annika-personal/react/unlayer/src/index.js":"3"},{"size":362,"mtime":1611577164261,"results":"4","hashOfConfig":"5"},{"size":8025,"mtime":1627557554346,"results":"6","hashOfConfig":"5"},{"size":500,"mtime":1611577164261,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9e6h9u",{"filePath":"10","messages":"11","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/annikachauhan/code/annika-personal/react/unlayer/src/reportWebVitals.js",[],"/Users/annikachauhan/code/annika-personal/react/unlayer/src/App.js",["15","16","17"],"import React, { useRef } from \"react\";\n\nimport EmailEditor from \"react-email-editor\";\n\nconst App = () => {\n  const emailEditorRef = useRef(null);\n\n  const exportHtml = () => {\n    emailEditorRef.current.editor.exportHtml((data) => {\n      const { design, html } = data;\n      console.log(data);\n      // console.log(\"exportHtml\", html);\n    });\n  };\n\n  const onLoad = () => {\n    // how to save to our server and call back designs: https://docs.unlayer.com/docs/templates\n    // we will need to save the template in JSON format to the marketing API, then call it back in JSON format to show the user an existing template - for editing\n    const templateJson = {};\n\n    if (Object.keys(templateJson).length !== 0) {\n      emailEditorRef.current.editor.loadDesign(templateJson);\n    }\n    return null;\n  };\n\n  const layout = {};\n\n  const onLoadTemplate = () => {\n    if (Object.keys(layout).length !== 0) {\n      return emailEditorRef?.current?.editor?.loadDesign(JSON.parse(layout));\n    }\n    emailEditorRef?.current?.editor?.addEventListener(\n      \"design:loaded\",\n      (data) => {\n        // Design is loaded\n        console.log(\"design load\", data); // design json\n      }\n    );\n  };\n\n  const save = () => {\n    emailEditorRef.current.editor.saveDesign((data) => {\n      // this data is just the design part of the JSON\n      console.log(data);\n    });\n  };\n\n  emailEditorRef?.current?.editor?.addEventListener(\"design:loaded\", (data) => {\n    // Design is loaded\n    console.log(data); // design json\n  });\n\n  let blocks = [\n    {\n      category: \"Test\",\n      tags: [\"tag1\"],\n      data: {\n        cells: [1],\n        columns: [\n          {\n            contents: [\n              {\n                type: \"heading\",\n                values: {\n                  containerPadding: \"10px\",\n                  headingType: \"h1\",\n                  fontFamily: {\n                    label: \"Arial\",\n                    value: \"arial,helvetica,sans-serif\",\n                  },\n                  fontSize: \"22px\",\n                  textAlign: \"left\",\n                  lineHeight: \"140%\",\n                  linkStyle: {\n                    inherit: true,\n                    linkColor: \"#0000ee\",\n                    linkHoverColor: \"#0000ee\",\n                    linkUnderline: true,\n                    linkHoverUnderline: true,\n                  },\n                  _meta: {\n                    htmlClassNames: \"u_content_heading\",\n                  },\n                  selectable: true,\n                  draggable: true,\n                  duplicatable: true,\n                  deletable: true,\n                  hideable: true,\n                  text: \"Heading\",\n                },\n              },\n              {\n                type: \"button\",\n                values: {\n                  containerPadding: \"10px\",\n                  href: {\n                    name: \"web\",\n                    values: {\n                      href: \"\",\n                      target: \"_blank\",\n                    },\n                  },\n                  buttonColors: {\n                    color: \"#FFFFFF\",\n                    backgroundColor: \"#3AAEE0\",\n                    hoverColor: \"#FFFFFF\",\n                    hoverBackgroundColor: \"#3AAEE0\",\n                  },\n                  size: {\n                    autoWidth: true,\n                    width: \"100%\",\n                  },\n                  textAlign: \"center\",\n                  lineHeight: \"120%\",\n                  padding: \"10px 20px\",\n                  border: {},\n                  borderRadius: \"4px\",\n                  _meta: {\n                    htmlClassNames: \"u_content_button\",\n                  },\n                  selectable: true,\n                  draggable: true,\n                  duplicatable: true,\n                  deletable: true,\n                  hideable: true,\n                  text: '<span style=\"font-size: 14px; line-height: 16.8px;\">Button Text</span>',\n                },\n              },\n            ],\n            values: {\n              _meta: {\n                htmlClassNames: \"u_column\",\n              },\n            },\n          },\n        ],\n        values: {\n          displayCondition: null,\n          columns: false,\n          backgroundColor: \"\",\n          columnsBackgroundColor: \"\",\n          backgroundImage: {\n            url: \"\",\n            fullWidth: true,\n            repeat: false,\n            center: true,\n            cover: false,\n          },\n          padding: \"0px\",\n          hideDesktop: false,\n          _meta: {\n            htmlClassNames: \"u_row\",\n          },\n          selectable: true,\n          draggable: true,\n          duplicatable: true,\n          deletable: true,\n          hideable: true,\n        },\n      },\n      displayMode: \"email\",\n    },\n  ];\n\n  emailEditorRef?.current?.editor?.registerProvider(\n    \"blocks\",\n    function (params, done) {\n      console.log(\"blocks provider\", params);\n      done(blocks);\n    }\n  );\n\n  // these call backs would be used to manage on our side\n  emailEditorRef?.current?.editor?.registerCallback(\n    \"block:added\",\n    function (newBlock, done) {\n      console.log(\"block:added\", newBlock);\n\n      // Save the block to your database here\n      // and pass the object to done callback.\n      // Each block should have it's own unique id\n\n      done(newBlock);\n    }\n  );\n\n  emailEditorRef?.current?.editor?.registerCallback(\n    \"block:modified\",\n    function (existingBlock, done) {\n      console.log(\"block:modified\", existingBlock);\n\n      // Update the block in your database here\n      // and pass the updated object to done callback.\n\n      done(existingBlock);\n    }\n  );\n\n  emailEditorRef?.current?.editor?.registerCallback(\n    \"block:removed\",\n    function (existingBlock, done) {\n      console.log(\"block:removed\", existingBlock);\n\n      // Delete the block from your database here.\n\n      done(existingBlock);\n    }\n  );\n\n  return (\n    <div>\n      <h1>Unlayer</h1>\n      <div\n        style={{\n          padding: \"10px\",\n          width: \"33%\",\n          display: \"flex\",\n          justifyContent: \"space-evenly\",\n        }}\n      >\n        <button onClick={exportHtml}>Export HTML</button>\n        <button onClick={save}>Save Design</button>\n      </div>\n\n      <div\n        style={{\n          width: \"100%\",\n          overflow: \"scroll\",\n        }}\n      >\n        <EmailEditor\n          ref={emailEditorRef}\n          projectId={27694}\n          id=\"editor\"\n          minHeight=\"500px\"\n          style={{ border: \"1px solid blue\", fontFamily: \"Arial\" }}\n          onLoad={onLoadTemplate}\n          // locale=\"it\"\n          locale=\"en\"\n          safeHtml={true}\n          appearance={{\n            theme: \"dark\",\n            panels: {\n              tools: {\n                dock: \"left\",\n              },\n            },\n          }}\n          options={{\n            user: {\n              id: 1,\n              name: \"Annika Chauhan\",\n              email: \"a.chauhan@novafutur.com\",\n            },\n            blocks: blocks,\n          }}\n          tools={{\n            divider: {\n              // whether a tool is visible or not\n              // enabled: false,\n            },\n            heading: {\n              // position of tool in the tools dock\n              position: 1,\n            },\n            button: {\n              // how many times you can use an item\n              // usageLimit: 1,\n              properties: {\n                // changes default properties of tool\n                buttonColors: {\n                  value: {\n                    color: \"#000\",\n                    backgroundColor: \"#3AAEE0\",\n                    hoverColor: \"#FFFFFF\",\n                    hoverBackgroundColor: \"#3AAEE0\",\n                  },\n                },\n                padding: {\n                  value: \"10px 20px\",\n                },\n                textAlign: {\n                  value: \"center\",\n                },\n              },\n            },\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","/Users/annikachauhan/code/annika-personal/react/unlayer/src/index.js",[],{"ruleId":"18","severity":1,"message":"19","line":10,"column":15,"nodeType":"20","messageId":"21","endLine":10,"endColumn":21},{"ruleId":"18","severity":1,"message":"22","line":10,"column":23,"nodeType":"20","messageId":"21","endLine":10,"endColumn":27},{"ruleId":"18","severity":1,"message":"23","line":16,"column":9,"nodeType":"20","messageId":"21","endLine":16,"endColumn":15},"no-unused-vars","'design' is assigned a value but never used.","Identifier","unusedVar","'html' is assigned a value but never used.","'onLoad' is assigned a value but never used."]